import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# # CLS-CIFAR100（10%）
# cm = np.array([
#     [70.55, 70.69, 70.74, 70.77, 70.83, 70.79, 70.75, 70.76, 70.79, 70.81, 70.75],
#     [70.61, 70.72, 70.82, 70.81, 70.72, 70.76, 70.72, 70.81, 70.76, 70.78, 70.83],
#     [70.63, 70.75, 70.81, 70.83, 70.75, 70.73, 70.76, 70.78, 70.73, 70.75, 70.81],
#     [70.66, 70.77, 70.78, 70.85, 70.81, 70.82, 70.81, 70.95, 70.82, 70.83, 70.78],
#     [70.64, 70.69, 70.75, 70.72, 71.02, 70.84, 70.83, 70.85, 70.86, 70.92, 70.82],
#     [70.69, 70.78, 70.84, 70.76, 70.89, 70.88, 70.97, 70.89, 70.92, 70.88, 70.87],
#     [70.66, 70.88, 70.74, 70.88, 70.84, 70.87, 70.94, 70.86, 70.92, 70.94, 70.84],
#     [70.71, 70.85, 70.86, 70.85, 70.93, 70.84, 71.02, 70.96, 70.81, 71.01, 70.95],
#     [70.68, 70.77, 70.96, 70.91, 70.89, 70.97, 71.02, 71.03, 70.85, 70.83, 70.81],
#     [70.73, 70.82, 71.04, 70.96, 70.93, 71.09, 71.03, 71.01, 70.84, 70.81, 70.78],
#     [70.85, 70.76, 71.07, 71.09, 71.04, 71.01, 71.04, 71.06, 71.03, 70.77, 70.74]
# ])

# DET-VOC07+12（10%）
cm = np.array([
    [83.21, 83.28963054, 83.4092709, 83.42921096, 83.46, 83.42, 83.43, 83.46, 83.43, 83.44, 83.38933084],
    [83.22, 83.38, 83.46, 83.46, 83.48, 83.49, 83.46, 83.48, 83.49, 83.47, 83.43],
    [83.26, 83.36, 83.43, 83.48, 83.49, 83.51, 83.48, 83.47, 83.43, 83.44, 83.42],
    [83.31, 83.37, 83.40, 83.43, 83.47, 83.48, 83.50, 83.49, 83.51, 83.46, 83.40],
    [83.33, 83.40, 83.46, 83.48, 83.49, 83.46, 83.51, 83.47, 83.54, 83.52, 83.51],
    [83.36, 83.34, 83.42, 83.50, 83.47, 83.54, 83.46, 83.48, 83.50, 83.46, 83.48],
    [83.37, 83.39, 83.44, 83.46, 83.48, 83.48, 83.44, 83.46, 83.49, 83.51, 83.49],
    [83.39, 83.41, 83.53, 83.48, 83.45, 83.41, 83.43, 83.49, 83.42, 83.47, 83.44],
    [83.31, 83.39, 83.48, 83.49, 83.46, 83.49, 83.52, 83.46, 83.44, 83.41, 83.38],
    [83.34, 83.42, 83.49, 83.56, 83.54, 83.46, 83.49, 83.48, 83.45, 83.37, 83.33],
    [83.36, 83.47, 83.47, 83.51, 83.50, 83.55, 83.54, 83.51, 83.43, 83.31, 83.28]
])

# 将混淆矩阵转换为小数形式
cm_decimal = cm
# cm_decimal = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]

# 类别标签
labels = ['0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1']

# 设置字体为 Times New Roman 并增大字体
# plt.rcParams['font.family'] = 'Times New Roman'
plt.rcParams.update({'font.size': 12})  # 增加字体大小

# 绘制小数形式的混淆矩阵
plt.figure(figsize=(8, 6))
ax = sns.heatmap(cm_decimal, annot=True, fmt=".2f", cmap='coolwarm', cbar=True,
            xticklabels=labels, yticklabels=labels, vmin=np.min(cm), vmax=np.max(cm))

# ax = sns.heatmap(cm_decimal, annot=True, fmt=".2f", cmap='Blues', cbar=True,
#             xticklabels=labels, yticklabels=labels,
#             annot_kws={"color": "white"})  # 设置文本颜色为黑色

plt.xlabel('Weights of Auxiliary Features')
plt.ylabel('Weights of Auxiliary Logits')
plt.tight_layout()

plt.show()